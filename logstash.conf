input {
  s3 {
    "access_key_id" => ""
    "secret_access_key" => ""
    "region" => "eu-west-2"
    "bucket" => ""
    "prefix" => "AWSLogs/708448198426/elasticloadbalancing/eu-west-2/"
    "type" => "bb-alb-log"
    "interval" => "10"
    "sincedb_path" => "/tmp/.bb-alb_since.db"
  }
}
filter {
  if [type] == "bb-alb-log" {
    grok {
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:elb} %{IP:clientip}:%{INT:clientport:int} (?:(%{IP:backendip}:?:%{INT:backendport:int})|-) %{NUMBER:request_processing_time:float} %{NUMBER:backend_processing_time:float} %{NUMBER:response_processing_time:float} (?:-|%{INT:elb_status_code:int}) (?:-|%{INT:backend_status_code:int}) %{INT:received_bytes:int} %{INT:sent_bytes:int} \"%{ELB_REQUEST_LINE}\" \"(?:-|%{DATA:user_agent})\" (?:-|%{NOTSPACE:ssl_cipher}) (?:-|%{NOTSPACE:ssl_protocol})" ]
    }
    date {
      match => [ "timestamp", "ISO8601"  ]
    }
    geoip {
        source => [ clientip ]
    }

    mutate {
      add_field => { "indexname" => "elb-%{elb}" }
    }

    mutate {
      lowercase => [ "indexname" ]
    }
  }
}
output {
  elasticsearch {
    hosts => ["https://elasticsearch.local:9200"]
    index => "bb-alb-logs-%{+YYYY.MM.dd}"
    ssl_certificate_verification => false
    user => "admin"
    password => "admin"
    ilm_enabled => false
  }
}

